name: Build & Deploy â†’ Cloud Run

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP (Service Account Key)
        if: secrets.GCP_SA_KEY != ''
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Authenticate to GCP (Workload Identity)
        if: secrets.WORKLOAD_IDENTITY_PROVIDER != ''
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Build and push image (Cloud Build)
        run: |
          IMAGE="gcr.io/${{ secrets.GCP_PROJECT }}/ml-extractor:${{ github.sha }}"
          echo "Building and pushing $IMAGE"
          gcloud builds submit --tag $IMAGE

      - name: Deploy to Cloud Run
        run: |
          IMAGE="gcr.io/${{ secrets.GCP_PROJECT }}/ml-extractor:${{ github.sha }}"
          gcloud run deploy ${{ secrets.CLOUD_RUN_SERVICE }} \
            --image $IMAGE \
            --region ${{ secrets.GCP_REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --port 8010

      - name: Get service URL
        id: get-url
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ secrets.CLOUD_RUN_SERVICE }} --region=${{ secrets.GCP_REGION }} --format='value(status.url)')
          echo "SERVICE_URL=${SERVICE_URL}" >> $GITHUB_OUTPUT

      - name: Smoke test /health
        run: |
          echo "Testing ${{ steps.get-url.outputs.SERVICE_URL }}/api/health"
          curl -fS -m 10 "${{ steps.get-url.outputs.SERVICE_URL }}/api/health"
