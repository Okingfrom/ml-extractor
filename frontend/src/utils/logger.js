/**
 * Logger utility for frontend development
 * Provides environment-based logging with proper formatting
 */

const isDev = process.env.NODE_ENV === 'development';

const logger = {
  info: (message, ...args) => {
    if (isDev) console.log(`‚ÑπÔ∏è ${message}`, ...args);
  },
  
  error: (message, ...args) => {
    if (isDev) console.error(`‚ùå ${message}`, ...args);
  },
  
  warn: (message, ...args) => {
    if (isDev) console.warn(`‚ö†Ô∏è ${message}`, ...args);
  },
  
  debug: (message, ...args) => {
    if (isDev) console.debug(`üîç ${message}`, ...args);
  },
  
  success: (message, ...args) => {
    if (isDev) console.log(`‚úÖ ${message}`, ...args);
  },
  
  request: (method, url) => {
    if (isDev) console.log(`üöÄ ${method?.toUpperCase()} ${url}`);
  },
  
  response: (method, url, status) => {
    if (isDev) console.log(`‚úÖ ${method?.toUpperCase()} ${url} - ${status}`);
  },
  
  requestError: (method, url, status) => {
    if (isDev) console.error(`‚ùå ${method?.toUpperCase()} ${url} - ${status}`);
  }
};

export default logger;
